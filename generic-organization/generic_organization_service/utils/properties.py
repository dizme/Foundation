import re
from enum import Enum

INFOCERT_ORGANIZATION_NAME = "Infocert"


def check_linked_match_and_get_values(data_values):
    check_match = re.match("(@)(.*?)(@)", data_values)
    if check_match:
        result = check_match.group(2)
        values = result.split("!")
        return values[0], values[1]
    return None, None


class SequencePrefix(Enum):
    ORGANIZATION = 'ORGANIZATION_'
    AGENT = 'AGENT_'
    PROOF = 'PROOF_'
    CREDENTIAL = 'CREDENTIAL_'


class DizmeEndpoints(Enum):
    ENDPOINT = ''


class MessageType(Enum):
    PROOF_INVITATION = 'proof_invitation'
    PROOF_REQUEST = 'proof_request'
    PROOF_FETCH = 'proof_fetch'
    CREATE_PROOF = 'create_proof'


class IDCheckPropertiesName(Enum):
    ISAC_ENDPOINT = 'IDCHECK_ISAC_ENDPOINT'
    DIVE_ENDPOINT = 'IDCHECK_DIVE_ENDPOINT'
    DIVE_USERNAME = 'IDCHECK_DIVE_USERNAME'
    DIVE_PASSWORD = 'IDCHECK_PASSWORD'
    DIVE_GEMALTO_PROFILE = 'IDCHECK_DIVE_GEMALTO_PROFILE'
    DIVE_RENEW_TOKENS_MINUTE = 'IDCHECK_RENEW_TOKENS_MINUTE'
    ADR_ENDPOINT = 'IDCHECK_ADR_ENDPOINT'
    ADR_APIKEY = 'IDCHECK_ADR_APIKEY'
    OAUTH2_ENDPOINT = 'IDCHECK_OAUTH2_ENDPOINT'
    OAUTH2_AUTHZ = 'IDCHECK_OAUTH_AUTHZ'
    SIMILARITY = 'FACE_MATCH_SIMILARITY_THRESHOLD'
    CHECK_FACES_SIMILARITY = 'CHECK_FACES_SIMILARITY_THRESHOLD'


class TopWebIdPropertiesName(Enum):
    WEBID_WSDL_ENDPOINT = 'WEBID_WSDL_ENDPOINT'
    WEBID_WSDL_USER = 'WEBID_WSDL_USER'
    WEBID_WSDL_PASSWORD = 'WEBID_WSDL_PASSWORD'
    WEBID_CONFIRM_USER = 'WEBID_CONFIRM_USER'
    WEBID_CONFIRM_PASSWORD = 'WEBID_CONFIRM_PASSWORD'
    WEBID_COMPANY_ID = 'WEBID_COMPANY_ID'
    WEBID_REDIRECT_SUCCESS = 'WEBID_REDIRECT_SUCCESS'
    WEBID_REDIRECT_FAILURE = 'WEBID_REDIRECT_FAILURE'
    WEBID_DOSSIER_URL = 'WEBID_DOSSIER_URL'
    #
    WEBID_SPID_WSDL_ENDPOINT = 'WEBID_SPID_WSDL_ENDPOINT'
    WEBID_SPID_WSDL_USER = 'WEBID_SPID_WSDL_USER'
    WEBID_SPID_WSDL_PASSWORD = 'WEBID_SPID_WSDL_PASSWORD'
    WEBID_SPID_CONFIRM_USER = 'WEBID_SPID_CONFIRM_USER'
    WEBID_SPID_CONFIRM_PASSWORD = 'WEBID_SPID_CONFIRM_PASSWORD'
    WEBID_SPID_COMPANY_ID = 'WEBID_SPID_COMPANY_ID'
    WEBID_SPID_REDIRECT_SUCCESS = 'WEBID_SPID_REDIRECT_SUCCESS'
    WEBID_SPID_REDIRECT_FAILURE = 'WEBID_SPID_REDIRECT_FAILURE'
    WEBID_SPID_DOSSIER_URL = 'WEBID_SPID_DOSSIER_URL'
    WEBID_SPID_DOSSIER_TYPE = 'WEBID_SPID_DOSSIER_TYPE'



class IqpPropertiesName(Enum):
    # COMMON IQP PROPERTIES
    IQP_CHECK_FACES_SIMILARITY_THRESHOLD = 'IQP_CHECK_FACES_SIMILARITY_THRESHOLD'
    # VIP_MOBILE POC IQP PROPERTIES
    IQP_ENDPOINT = 'IQP_ENDPOINT'
    IQP_OAUTH2_ENDPOINT = 'IQP_OAUTH2_ENDPOINT'
    IQP_OAUTH_AUTHZ = 'IQP_OAUTH_AUTHZ'
    IQP_OAUTH_CLIENT_ID = 'IQP_OAUTH_CLIENT_ID'
    IQP_API_KEY = 'IQP_API_KEY'
    # INFOCERT IQP PROPERTIES
    INFOCERT_IQP_ENDPOINT = 'INFOCERT_IQP_ENDPOINT'
    INFOCERT_IQP_OAUTH2_ENDPOINT = 'INFOCERT_IQP_OAUTH2_ENDPOINT'
    INFOCERT_IQP_OAUTH_AUTHZ = 'INFOCERT_IQP_OAUTH_AUTHZ'
    INFOCERT_IQP_OAUTH_CLIENT_ID = 'INFOCERT_IQP_OAUTH_CLIENT_ID'
    INFOCERT_IQP_API_KEY = 'INFOCERT_IQP_API_KEY'
    INFOCERT_IQP_PROCESS_ID = 'INFOCERT_IQP_PROCESS_ID'



class AuthzPropertiesName(Enum):
    AUTHZ_TOKEN = 'AUTHZ_TOKEN'
    AUTHZ_ORGANIZATION = 'AUTHZ_ORGANIZATION'
